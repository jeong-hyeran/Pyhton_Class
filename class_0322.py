# for i in [1,2,3,4,5,6,7,8,9]:
# for i in [11,2,3,1,6,4,12,5,7,9]:
#     print("i:",i)

# # => (리스트형)시퀀스형의 특징
# # 순서가 존재하는 자료형이다.
# # 보조 첨자 (인덱스)를 사용한다.(페레로로쉐)
# # 튜플 리스트 문자열 (차례대로 대입)
# for i in [11,2,3,1,6,4,12,5,7,9]:
# =>구성요소의 갯수만큼 반복 횟수를 표현

#     print("동일한 반복")

# ls=[1,2,3,4,5,6,7,8,9,10]
# for i in ls:
#     print("i: ",i)
# for i in ls:
#     print(i,end=" ")
# # ->새로와 가로로 출력할 수 잇따.
# 변수지만 변수에 들어갈 정보가 시퀀스형이기 때문에
# 리스트의 갯수 만큼 반복이 진행된다.

# ls = [10, "test",123.123]
# print("list: ",ls)
# print()
# for i in ls:
#     print("i에 ",i,"대입한 후 print() 실행")
#     print(type(i))
# ->리스트형...

# st="Hello Python"
# for i in st:
#     print("i: ",i)

# ->문자형도 시퀀스형으로 보는뎅.. 다른점은 따옴표로 묶는다


# 다음 문자열 중에서 ‘a’의 개수와 ‘s’의 개수 그리고 총 개수(공백 포함)도 구하시오 
# ❖ 결과 
# ❖ 총 개수 : 24 
# ❖ a 개수 : 2 
# ❖ s 개수 : 3
# sum_=1
# st = "It is a fun Python class" 

# for i in st:
#     if "a"==i:
#         print("a의 개수는 %d"% i)
#     if "s"==i:print(i)

# #=> 강사님 풀이
# st = "It is a fun Python class" 
# to_cnt=0; a_cnt=0; s_cnt=0
# for i in st :
#     to_cnt+=1 #입력되는 전체 문자의 개수 (공백포함)
#     if "a"==i:
#         a_cnt+=1
#     elif i =="s":
#         s_cnt+=1
# print("총 개수:%d\na개수 : %d\ns개수 :%d"%(to_cnt,a_cnt,s_cnt))
 
 #[format] 파이썬 적인 표현
# # 중괄호{}로 표현=서식제어문이랑 같이 봐도 된다.
# # 이게 튜플이라는 자료형 
# # format 표현 할 때는 '.'점 찍어야 한다?
# print("{0}+{1}={2}".format(10,2,10+2)) 
# print("{2}+{1}={0}".format(10,2,10+2)) 
# print("{}+{}={}".format(10,2,10+2)) 
# #중간로 안에가 순서, 비워두면 차례대로
# #이 상황에 한칸에만 수동으로 인덱스로 입력하면 에러뜬다.
# #비워 두려면 아예 다 비워두던가 넣을꺼면 아예 다 넣어야 한다.

# print("{:,}".format(1000000)) 
# #엑셀에서 천단위마다 콜론 붙혀주는 것
# print("{:<10},왼쪽정렬,{:0<10}".format('첫번째','두번째')) 
# print("{:>10},오른쪽정렬,{:9>10}".format('첫번째','두번째')) 
# print("{:^10},가운데정렬,{:5^10}".format('첫번째','두번째'))
# #숫자가 다 문자형으로 입력된다. 두가지 문자가 들어가면 안됨
# #칸확보 칸이랑 채워넣은 칸이 홀짝이 안 맞으면 가운데 정렬하면 항상 오른쪽이 한칸 빈다.

# print("{:f}".format(3.14))
# print("{:d}".format(100))
# print("{:8d}".format(100))#서식 제어문이랑 같게 사용 할 수 있다.
# print("12345678901234567890")

# for i in range ( 0 , 3 , 1): 
#     for k in range ( 0 , 5 , 1): 
#         print("이중 for 문 (i : %d\tk : %d)" % (i , k )) 
# ❖위의 내용을 바탕으로 구구단 만들기.
# print("--------------------------- 구 구 단 ---------------------------")
# for k in range(2,10,1):
#     print(end="%d단\t"%k)
# print()
# # print(" 2단\t3단\t4단\t5단\t6단\t7단\t8단\t9단\t")
# print("----------------------------------------------------------------")
# for i in range(1,10,1):
#     for j in range(2,10,1):
#         if j < 9 : print(end="%d*%d=%d\t"%(j,i,j*i))
#         if j == 9 : print(end="%d*%d=%d\n"%(j,i,j*i))
#=> 강사님 풀이
# print("\t\t #### 구 구 단 ####")
# print("================================================================")
# for k in range(2,10) :
#     print("%d단"%k,end="\t")
# print()
# print("================================================================")
# for i in range(1,10,1): # 곱해지는 수
#     for j in range(2,10,1): #단수
#         print("%dX%d=%d\t"%(j,i,j*i),end="")
#     print()

# # 아래와 같이 출력 되게 만드시오
# for i in range(0,5,1):
#     print("상위포문 %d 일때 하위 포문 :"%i,end="")
#     for j in range(0,5,1):
#         print(i*j,end=" ")
#     print()    